// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LinkSanitizer stack 1`] = `
{
  "Outputs": {
    "ApiEndpoint4F160690": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiF70053CD",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "ApiDeploymentStageprod3EB9684E",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiANY40671C4F": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "Handler886CB40B",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "ApiF70053CD",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiANYApiPermissionTesttestApi91C49FB9ANYF2F064A4": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Handler886CB40B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiF70053CD",
              },
              "/test-invoke-stage/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiANYApiPermissiontestApi91C49FB9ANY1F9E02F6": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Handler886CB40B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiF70053CD",
              },
              "/",
              {
                "Ref": "ApiDeploymentStageprod3EB9684E",
              },
              "/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiAccountA18C9B29": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ApiF70053CD",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiCloudWatchRole73EC6FC4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiCloudWatchRole73EC6FC4": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiDeploymentB17BE62D6b6eb4522b196cdc7aa3bb6ccfa03df7": {
      "DependsOn": [
        "ApiproxyANY4946669B",
        "Apiproxy05443892",
        "ApiANY40671C4F",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "ApiF70053CD",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "ApiDeploymentStageprod3EB9684E": {
      "DependsOn": [
        "ApiAccountA18C9B29",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "ApiDeploymentB17BE62D6b6eb4522b196cdc7aa3bb6ccfa03df7",
        },
        "RestApiId": {
          "Ref": "ApiF70053CD",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "ApiF70053CD": {
      "Properties": {
        "Name": "Api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "Apiproxy05443892": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "ApiF70053CD",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiproxyANY4946669B": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "Handler886CB40B",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "Apiproxy05443892",
        },
        "RestApiId": {
          "Ref": "ApiF70053CD",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiproxyANYApiPermissionTesttestApi91C49FB9ANYproxy7A023D0A": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Handler886CB40B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiF70053CD",
              },
              "/test-invoke-stage/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiproxyANYApiPermissiontestApi91C49FB9ANYproxy19423C2D": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Handler886CB40B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiF70053CD",
              },
              "/",
              {
                "Ref": "ApiDeploymentStageprod3EB9684E",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Handler886CB40B": {
      "DependsOn": [
        "HandlerServiceRoleDefaultPolicyCBD0CC91",
        "HandlerServiceRoleFCDC14AE",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "320694b6d3a6c6eaae3423cd0767e41b80ffba8bf73eaba34b4520856ac2222c.zip",
        },
        "Description": "src/handle-message.lambda.ts",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "MESSAGE_QUEUE_URL": {
              "Ref": "MessageQueue7A3BF959",
            },
            "URL_PARAMETERS_BLACKLIST": "["utm_source","utm_medium","utm_campaign","utm_name","utm_term","utm_content","gclid","fbclid","igshid","mc_eid","mc_cid","_hsenc","_hsmi","hsCtaTracking","t"]",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "HandlerServiceRoleFCDC14AE",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "HandlerEventInvokeConfig16376DFA": {
      "Properties": {
        "FunctionName": {
          "Ref": "Handler886CB40B",
        },
        "MaximumRetryAttempts": 0,
        "Qualifier": "$LATEST",
      },
      "Type": "AWS::Lambda::EventInvokeConfig",
    },
    "HandlerServiceRoleDefaultPolicyCBD0CC91": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MessageQueue7A3BF959",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "HandlerServiceRoleDefaultPolicyCBD0CC91",
        "Roles": [
          {
            "Ref": "HandlerServiceRoleFCDC14AE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "HandlerServiceRoleFCDC14AE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MessageQueue7A3BF959": {
      "DeletionPolicy": "Delete",
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "MessageSenderC8564C19": {
      "DependsOn": [
        "MessageSenderServiceRoleDefaultPolicy568938A7",
        "MessageSenderServiceRole0B8B9CA7",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "ec11472755a90f53cb93da88511b310a7f680f286b2f03ab2d4dbedb44dce34d.zip",
        },
        "Description": "src/send-message.lambda.ts",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "TELEGRAM_TOKEN_PARAMETER_NAME": "MyToken",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "MessageSenderServiceRole0B8B9CA7",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "MessageSenderEventInvokeConfig463CA2E9": {
      "Properties": {
        "FunctionName": {
          "Ref": "MessageSenderC8564C19",
        },
        "MaximumRetryAttempts": 0,
        "Qualifier": "$LATEST",
      },
      "Type": "AWS::Lambda::EventInvokeConfig",
    },
    "MessageSenderServiceRole0B8B9CA7": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MessageSenderServiceRoleDefaultPolicy568938A7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/MyToken",
                  ],
                ],
              },
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MessageQueue7A3BF959",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MessageSenderServiceRoleDefaultPolicy568938A7",
        "Roles": [
          {
            "Ref": "MessageSenderServiceRole0B8B9CA7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MessageSenderSqsEventSourcetestMessageQueue7CFBF9F0387EAD69": {
      "Properties": {
        "BatchSize": 1,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "MessageQueue7A3BF959",
            "Arn",
          ],
        },
        "FunctionName": {
          "Ref": "MessageSenderC8564C19",
        },
        "ScalingConfig": {
          "MaximumConcurrency": 2,
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "Webhook": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "WebhookProviderframeworkonEventA9527C6B",
            "Arn",
          ],
        },
        "tokenParameterName": "MyToken",
        "webhookURL": {
          "Fn::Join": [
            "",
            [
              "https://",
              {
                "Ref": "ApiF70053CD",
              },
              ".execute-api.",
              {
                "Ref": "AWS::Region",
              },
              ".",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              {
                "Ref": "ApiDeploymentStageprod3EB9684E",
              },
              "/",
            ],
          ],
        },
      },
      "Type": "Custom::TelegramBotWebhook",
      "UpdateReplacePolicy": "Delete",
    },
    "WebhookHandler0697217E": {
      "DependsOn": [
        "WebhookHandlerServiceRoleDefaultPolicy5B9DDF0F",
        "WebhookHandlerServiceRole82D8E58D",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "be72627956082b34daea4dc38d5366dc878f5f239ab70fcac30e739998fa625f.zip",
        },
        "Description": "src/register-webhook.lambda.ts",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "WebhookHandlerServiceRole82D8E58D",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "WebhookHandlerServiceRole82D8E58D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "WebhookHandlerServiceRoleDefaultPolicy5B9DDF0F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/MyToken",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "WebhookHandlerServiceRoleDefaultPolicy5B9DDF0F",
        "Roles": [
          {
            "Ref": "WebhookHandlerServiceRole82D8E58D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "WebhookProviderframeworkonEventA9527C6B": {
      "DependsOn": [
        "WebhookProviderframeworkonEventServiceRoleDefaultPolicy4B4F71B4",
        "WebhookProviderframeworkonEventServiceRole483AC2AF",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "f2d30cfc360482320a52a4fcde8a70f3569df79ab30be24650fda58eb60052cf.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (test/Webhook/Provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "WebhookHandler0697217E",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "WebhookProviderframeworkonEventServiceRole483AC2AF",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "WebhookProviderframeworkonEventServiceRole483AC2AF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "WebhookProviderframeworkonEventServiceRoleDefaultPolicy4B4F71B4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "WebhookHandler0697217E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "WebhookHandler0697217E",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "WebhookProviderframeworkonEventServiceRoleDefaultPolicy4B4F71B4",
        "Roles": [
          {
            "Ref": "WebhookProviderframeworkonEventServiceRole483AC2AF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
